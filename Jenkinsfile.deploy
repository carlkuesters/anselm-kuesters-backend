pipeline {
    agent any
    options {
        buildDiscarder(logRotator(numToKeepStr: '10'))
        skipDefaultCheckout()
        ansiColor('xterm')
    }
    parameters {
        string(name: 'VERSION', defaultValue: 'master')
    }
    stages {
        stage('Checkout') {
            steps {
                checkout scm
                sh 'git checkout $VERSION'
            }
        }
        stage('Build') {
            agent {
                docker {
                    image 'node:18-alpine'
                    reuseNode true
                }
            }
            steps {
                sh 'npm install'
                sh 'npm run build'
            }
        }
        stage('Deploy') {
            steps {
                withCredentials([
                  string(credentialsId: 'db-root-password', variable: 'DB_ROOT_PASSWORD'),
                  file(credentialsId: 'anselm-kuesters-backend-env', variable: 'ENV_FILE')
                ]) {
                  sh 'cp $ENV_FILE .env'
                  sh 'docker compose build --no-cache'
                  sh 'docker compose up -d'
                }
              }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}
